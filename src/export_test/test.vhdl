-- This file was generated by		
-- Qfsm Version 0.43			
-- (C) Stefan Duffner			

library ieee;

use ieee.std_logic_1164.all;

entity no_idea is
--  generic (prop_delay : Time := 10 ns);
  port (clock: in std_logic;
        reset: in std_logic;
        a: in std_logic_vector(7 downto 0);
        q: out std_logic_vector(7 downto 0);
        o: out std_logic_vector(7 downto 0));
end no_idea;

architecture behaviour of no_idea is

type state_type is (State_0, State_1, State_2);
signal next_state, current_state : state_type;

-- comments for syf which comes with alliance : http://www-asim.lip6.fr/alliance
-- interpreted as comments by other tools
  --pragma CURRENT_STATE current_state
  --pragma NEXT_STATE next_state
  --pragma CLOCK clock

begin
  process (reset, clock)
  begin
    if reset='1' then
      current_state <= State_0;
    elsif clock'event and clock='1' then
      current_state <= next_state;
    end if;
  end process;

  process (reset, a, current_state)
  begin
    -- default assignments
--    o <= "00000000";
--    next_state <= current_state;

    if reset='1' then 
      next_state <= State_0;
    else
    case current_state is
      when State_0 =>
        if a/="01100001" and 
           a/="01100010" and 
           a/="01100011" and 
           a/="01100100" and 
           a/="01100101" and 
           a/="01100110" and 
           a/="01100111" and 
           a/="01101000" and 
           a/="01101001" and 
           a/="01101010" and 
           a/="01101011" and 
           a/="01101100" and 
           a/="01101101" and 
           a/="01101110" and 
           a/="01101111" and 
           a/="01110000" and 
           a/="01110001" and 
           a/="01110010" and 
           a/="01110011" and 
           a/="01110100" and 
           a/="01110101" and 
           a/="01110110" and 
           a/="01110111" and 
           a/="01111000" and 
           a/="01111001" and 
           a/="01111010" and 
           a/="01010110" then
          o <= "01100110";
          next_state <= State_1;
        end if;
      when State_1 =>
        if a="00110000" or 
           a="00110001" or 
           a="00110010" or 
           a="00110011" or 
           a="00110100" or 
           a="00110101" or 
           a="00110110" or 
           a="00110111" or 
           a="00111000" or 
           a="00111001" then
          next_state <= State_0;
        end if;
        if a/="00110000" and 
           a/="00110001" and 
           a/="00110010" and 
           a/="00110011" and 
           a/="00110100" and 
           a/="00110101" and 
           a/="00110110" and 
           a/="00110111" and 
           a/="00111000" and 
           a/="00111001" then
          next_state <= State_2;
        end if;
      when State_2 =>
        if a/="00110000" and 
           a/="00110001" and 
           a/="00110010" and 
           a/="00110011" and 
           a/="00110100" and 
           a/="00110101" and 
           a/="00110110" and 
           a/="00110111" and 
           a/="00111000" and 
           a/="00111001" and 
           a/="00111010" and 
           a/="00111011" and 
           a/="00111100" and 
           a/="00111101" and 
           a/="00111110" and 
           a/="00111111" and 
           a/="01000000" and 
           a/="01000001" and 
           a/="01000010" and 
           a/="01000011" and 
           a/="01000100" and 
           a/="01000101" and 
           a/="01000110" and 
           a/="01000111" and 
           a/="01001000" and 
           a/="01001001" and 
           a/="01001010" and 
           a/="01001011" and 
           a/="01001100" and 
           a/="01001101" and 
           a/="01001110" and 
           a/="01001111" and 
           a/="01010000" and 
           a/="01010001" and 
           a/="01010010" and 
           a/="01010011" and 
           a/="01010100" and 
           a/="01010101" and 
           a/="01010110" and 
           a/="01010111" and 
           a/="01011000" and 
           a/="01011001" and 
           a/="01011010" and 
           a/="01011011" and 
           a/="01011100" and 
           a/="01011101" and 
           a/="01011110" and 
           a/="01011111" and 
           a/="01100000" and 
           a/="01100001" then
          next_state <= State_0;
        end if;
      when others => null;
    end case;
  end process;

end behaviour;
